/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps

import (
	"encoding/json"
)

// checks if the RoleAllowedResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleAllowedResources{}

// RoleAllowedResources 利用できるリソース。resource_filteringがenabledの場合のみ指定可能。
type RoleAllowedResources struct {
	// 利用できるサーバーのid
	Servers []int32 `json:"servers,omitempty"`
	// 利用できるスイッチのid
	Switches []int32 `json:"switches,omitempty"`
	// 利用できるNFSのid
	NfsServers []int32 `json:"nfs_servers,omitempty"`
}

// NewRoleAllowedResources instantiates a new RoleAllowedResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAllowedResources() *RoleAllowedResources {
	this := RoleAllowedResources{}
	return &this
}

// NewRoleAllowedResourcesWithDefaults instantiates a new RoleAllowedResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAllowedResourcesWithDefaults() *RoleAllowedResources {
	this := RoleAllowedResources{}
	return &this
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *RoleAllowedResources) GetServers() []int32 {
	if o == nil || IsNil(o.Servers) {
		var ret []int32
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllowedResources) GetServersOk() ([]int32, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *RoleAllowedResources) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []int32 and assigns it to the Servers field.
func (o *RoleAllowedResources) SetServers(v []int32) {
	o.Servers = v
}

// GetSwitches returns the Switches field value if set, zero value otherwise.
func (o *RoleAllowedResources) GetSwitches() []int32 {
	if o == nil || IsNil(o.Switches) {
		var ret []int32
		return ret
	}
	return o.Switches
}

// GetSwitchesOk returns a tuple with the Switches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllowedResources) GetSwitchesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Switches) {
		return nil, false
	}
	return o.Switches, true
}

// HasSwitches returns a boolean if a field has been set.
func (o *RoleAllowedResources) HasSwitches() bool {
	if o != nil && !IsNil(o.Switches) {
		return true
	}

	return false
}

// SetSwitches gets a reference to the given []int32 and assigns it to the Switches field.
func (o *RoleAllowedResources) SetSwitches(v []int32) {
	o.Switches = v
}

// GetNfsServers returns the NfsServers field value if set, zero value otherwise.
func (o *RoleAllowedResources) GetNfsServers() []int32 {
	if o == nil || IsNil(o.NfsServers) {
		var ret []int32
		return ret
	}
	return o.NfsServers
}

// GetNfsServersOk returns a tuple with the NfsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllowedResources) GetNfsServersOk() ([]int32, bool) {
	if o == nil || IsNil(o.NfsServers) {
		return nil, false
	}
	return o.NfsServers, true
}

// HasNfsServers returns a boolean if a field has been set.
func (o *RoleAllowedResources) HasNfsServers() bool {
	if o != nil && !IsNil(o.NfsServers) {
		return true
	}

	return false
}

// SetNfsServers gets a reference to the given []int32 and assigns it to the NfsServers field.
func (o *RoleAllowedResources) SetNfsServers(v []int32) {
	o.NfsServers = v
}

func (o RoleAllowedResources) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleAllowedResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Switches) {
		toSerialize["switches"] = o.Switches
	}
	if !IsNil(o.NfsServers) {
		toSerialize["nfs_servers"] = o.NfsServers
	}
	return toSerialize, nil
}

type NullableRoleAllowedResources struct {
	value *RoleAllowedResources
	isSet bool
}

func (v NullableRoleAllowedResources) Get() *RoleAllowedResources {
	return v.value
}

func (v *NullableRoleAllowedResources) Set(val *RoleAllowedResources) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAllowedResources) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAllowedResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAllowedResources(val *RoleAllowedResources) *NullableRoleAllowedResources {
	return &NullableRoleAllowedResources{value: val, isSet: true}
}

func (v NullableRoleAllowedResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAllowedResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


