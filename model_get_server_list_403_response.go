/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps

import (
	"encoding/json"
)

// checks if the GetServerList403Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServerList403Response{}

// GetServerList403Response struct for GetServerList403Response
type GetServerList403Response struct {
	// エラー内容を示す簡潔な識別子
	Code *string `json:"code,omitempty"`
	// エラーの内容
	Message *string `json:"message,omitempty"`
}

// NewGetServerList403Response instantiates a new GetServerList403Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServerList403Response() *GetServerList403Response {
	this := GetServerList403Response{}
	return &this
}

// NewGetServerList403ResponseWithDefaults instantiates a new GetServerList403Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServerList403ResponseWithDefaults() *GetServerList403Response {
	this := GetServerList403Response{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetServerList403Response) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerList403Response) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetServerList403Response) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetServerList403Response) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetServerList403Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerList403Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetServerList403Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetServerList403Response) SetMessage(v string) {
	o.Message = &v
}

func (o GetServerList403Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServerList403Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableGetServerList403Response struct {
	value *GetServerList403Response
	isSet bool
}

func (v NullableGetServerList403Response) Get() *GetServerList403Response {
	return v.value
}

func (v *NullableGetServerList403Response) Set(val *GetServerList403Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServerList403Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServerList403Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServerList403Response(val *GetServerList403Response) *NullableGetServerList403Response {
	return &NullableGetServerList403Response{value: val, isSet: true}
}

func (v NullableGetServerList403Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServerList403Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


