/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps_client_go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SwitchZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchZone{}

// SwitchZone ゾーン情報
type SwitchZone struct {
	// ゾーンコード * tk1 東京第1 * tk2 東京第2 * tk3 東京第3 * os1 大阪第1 * os2 大阪第2 * os3 大阪第3 * is1 石狩第1
	Code string `json:"code"`
	// ゾーン名称
	Name string `json:"name"`
}

type _SwitchZone SwitchZone

// NewSwitchZone instantiates a new SwitchZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchZone(code string, name string) *SwitchZone {
	this := SwitchZone{}
	this.Code = code
	this.Name = name
	return &this
}

// NewSwitchZoneWithDefaults instantiates a new SwitchZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchZoneWithDefaults() *SwitchZone {
	this := SwitchZone{}
	return &this
}

// GetCode returns the Code field value
func (o *SwitchZone) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *SwitchZone) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *SwitchZone) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value
func (o *SwitchZone) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SwitchZone) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SwitchZone) SetName(v string) {
	o.Name = v
}

func (o SwitchZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *SwitchZone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSwitchZone := _SwitchZone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSwitchZone)

	if err != nil {
		return err
	}

	*o = SwitchZone(varSwitchZone)

	return err
}

type NullableSwitchZone struct {
	value *SwitchZone
	isSet bool
}

func (v NullableSwitchZone) Get() *SwitchZone {
	return v.value
}

func (v *NullableSwitchZone) Set(val *SwitchZone) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchZone) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchZone(val *SwitchZone) *NullableSwitchZone {
	return &NullableSwitchZone{value: val, isSet: true}
}

func (v NullableSwitchZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


