/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps_client_go

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ServerMonitoringHealth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerMonitoringHealth{}

// ServerMonitoringHealth struct for ServerMonitoringHealth
type ServerMonitoringHealth struct {
	// 最終監視日時
	LastCheckedAt NullableTime `json:"last_checked_at"`
	// ステータス   * healthy 正常   * unhealthy 異常
	Status NullableString `json:"status"`
	// 最終ステータス変更日時
	LastStatusChangedAt NullableTime `json:"last_status_changed_at"`
}

type _ServerMonitoringHealth ServerMonitoringHealth

// NewServerMonitoringHealth instantiates a new ServerMonitoringHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerMonitoringHealth(lastCheckedAt NullableTime, status NullableString, lastStatusChangedAt NullableTime) *ServerMonitoringHealth {
	this := ServerMonitoringHealth{}
	this.LastCheckedAt = lastCheckedAt
	this.Status = status
	this.LastStatusChangedAt = lastStatusChangedAt
	return &this
}

// NewServerMonitoringHealthWithDefaults instantiates a new ServerMonitoringHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerMonitoringHealthWithDefaults() *ServerMonitoringHealth {
	this := ServerMonitoringHealth{}
	return &this
}

// GetLastCheckedAt returns the LastCheckedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ServerMonitoringHealth) GetLastCheckedAt() time.Time {
	if o == nil || o.LastCheckedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastCheckedAt.Get()
}

// GetLastCheckedAtOk returns a tuple with the LastCheckedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerMonitoringHealth) GetLastCheckedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastCheckedAt.Get(), o.LastCheckedAt.IsSet()
}

// SetLastCheckedAt sets field value
func (o *ServerMonitoringHealth) SetLastCheckedAt(v time.Time) {
	o.LastCheckedAt.Set(&v)
}

// GetStatus returns the Status field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServerMonitoringHealth) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}

	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerMonitoringHealth) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// SetStatus sets field value
func (o *ServerMonitoringHealth) SetStatus(v string) {
	o.Status.Set(&v)
}

// GetLastStatusChangedAt returns the LastStatusChangedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ServerMonitoringHealth) GetLastStatusChangedAt() time.Time {
	if o == nil || o.LastStatusChangedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastStatusChangedAt.Get()
}

// GetLastStatusChangedAtOk returns a tuple with the LastStatusChangedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerMonitoringHealth) GetLastStatusChangedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastStatusChangedAt.Get(), o.LastStatusChangedAt.IsSet()
}

// SetLastStatusChangedAt sets field value
func (o *ServerMonitoringHealth) SetLastStatusChangedAt(v time.Time) {
	o.LastStatusChangedAt.Set(&v)
}

func (o ServerMonitoringHealth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerMonitoringHealth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["last_checked_at"] = o.LastCheckedAt.Get()
	toSerialize["status"] = o.Status.Get()
	toSerialize["last_status_changed_at"] = o.LastStatusChangedAt.Get()
	return toSerialize, nil
}

func (o *ServerMonitoringHealth) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"last_checked_at",
		"status",
		"last_status_changed_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerMonitoringHealth := _ServerMonitoringHealth{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerMonitoringHealth)

	if err != nil {
		return err
	}

	*o = ServerMonitoringHealth(varServerMonitoringHealth)

	return err
}

type NullableServerMonitoringHealth struct {
	value *ServerMonitoringHealth
	isSet bool
}

func (v NullableServerMonitoringHealth) Get() *ServerMonitoringHealth {
	return v.value
}

func (v *NullableServerMonitoringHealth) Set(val *ServerMonitoringHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableServerMonitoringHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableServerMonitoringHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerMonitoringHealth(val *ServerMonitoringHealth) *NullableServerMonitoringHealth {
	return &NullableServerMonitoringHealth{value: val, isSet: true}
}

func (v NullableServerMonitoringHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerMonitoringHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


