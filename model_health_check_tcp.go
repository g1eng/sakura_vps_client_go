/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps_client_go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HealthCheckTcp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthCheckTcp{}

// HealthCheckTcp struct for HealthCheckTcp
type HealthCheckTcp struct {
	// 監視方法
	Protocol string `json:"protocol"`
	// ポート番号
	Port int32 `json:"port"`
	// チェック間隔(分)
	IntervalMinutes int32 `json:"interval_minutes"`
}

type _HealthCheckTcp HealthCheckTcp

// NewHealthCheckTcp instantiates a new HealthCheckTcp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheckTcp(protocol string, port int32, intervalMinutes int32) *HealthCheckTcp {
	this := HealthCheckTcp{}
	this.Protocol = protocol
	this.Port = port
	this.IntervalMinutes = intervalMinutes
	return &this
}

// NewHealthCheckTcpWithDefaults instantiates a new HealthCheckTcp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckTcpWithDefaults() *HealthCheckTcp {
	this := HealthCheckTcp{}
	return &this
}

// GetProtocol returns the Protocol field value
func (o *HealthCheckTcp) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *HealthCheckTcp) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *HealthCheckTcp) SetProtocol(v string) {
	o.Protocol = v
}

// GetPort returns the Port field value
func (o *HealthCheckTcp) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *HealthCheckTcp) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *HealthCheckTcp) SetPort(v int32) {
	o.Port = v
}

// GetIntervalMinutes returns the IntervalMinutes field value
func (o *HealthCheckTcp) GetIntervalMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IntervalMinutes
}

// GetIntervalMinutesOk returns a tuple with the IntervalMinutes field value
// and a boolean to check if the value has been set.
func (o *HealthCheckTcp) GetIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntervalMinutes, true
}

// SetIntervalMinutes sets field value
func (o *HealthCheckTcp) SetIntervalMinutes(v int32) {
	o.IntervalMinutes = v
}

func (o HealthCheckTcp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthCheckTcp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protocol"] = o.Protocol
	toSerialize["port"] = o.Port
	toSerialize["interval_minutes"] = o.IntervalMinutes
	return toSerialize, nil
}

func (o *HealthCheckTcp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protocol",
		"port",
		"interval_minutes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHealthCheckTcp := _HealthCheckTcp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHealthCheckTcp)

	if err != nil {
		return err
	}

	*o = HealthCheckTcp(varHealthCheckTcp)

	return err
}

type NullableHealthCheckTcp struct {
	value *HealthCheckTcp
	isSet bool
}

func (v NullableHealthCheckTcp) Get() *HealthCheckTcp {
	return v.value
}

func (v *NullableHealthCheckTcp) Set(val *HealthCheckTcp) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheckTcp) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheckTcp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheckTcp(val *HealthCheckTcp) *NullableHealthCheckTcp {
	return &NullableHealthCheckTcp{value: val, isSet: true}
}

func (v NullableHealthCheckTcp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheckTcp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


