/*
さくらのVPS APIドキュメント

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sakura_vps

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServerMonitoringSettingsNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerMonitoringSettingsNotification{}

// ServerMonitoringSettingsNotification struct for ServerMonitoringSettingsNotification
type ServerMonitoringSettingsNotification struct {
	Email ServerMonitoringSettingsNotificationEmail `json:"email"`
	IncomingWebhook ServerMonitoringSettingsNotificationIncomingWebhook `json:"incoming_webhook"`
	// 再通知間隔(時間)
	IntervalHours int32 `json:"interval_hours"`
}

type _ServerMonitoringSettingsNotification ServerMonitoringSettingsNotification

// NewServerMonitoringSettingsNotification instantiates a new ServerMonitoringSettingsNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerMonitoringSettingsNotification(email ServerMonitoringSettingsNotificationEmail, incomingWebhook ServerMonitoringSettingsNotificationIncomingWebhook, intervalHours int32) *ServerMonitoringSettingsNotification {
	this := ServerMonitoringSettingsNotification{}
	this.Email = email
	this.IncomingWebhook = incomingWebhook
	this.IntervalHours = intervalHours
	return &this
}

// NewServerMonitoringSettingsNotificationWithDefaults instantiates a new ServerMonitoringSettingsNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerMonitoringSettingsNotificationWithDefaults() *ServerMonitoringSettingsNotification {
	this := ServerMonitoringSettingsNotification{}
	return &this
}

// GetEmail returns the Email field value
func (o *ServerMonitoringSettingsNotification) GetEmail() ServerMonitoringSettingsNotificationEmail {
	if o == nil {
		var ret ServerMonitoringSettingsNotificationEmail
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ServerMonitoringSettingsNotification) GetEmailOk() (*ServerMonitoringSettingsNotificationEmail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ServerMonitoringSettingsNotification) SetEmail(v ServerMonitoringSettingsNotificationEmail) {
	o.Email = v
}

// GetIncomingWebhook returns the IncomingWebhook field value
func (o *ServerMonitoringSettingsNotification) GetIncomingWebhook() ServerMonitoringSettingsNotificationIncomingWebhook {
	if o == nil {
		var ret ServerMonitoringSettingsNotificationIncomingWebhook
		return ret
	}

	return o.IncomingWebhook
}

// GetIncomingWebhookOk returns a tuple with the IncomingWebhook field value
// and a boolean to check if the value has been set.
func (o *ServerMonitoringSettingsNotification) GetIncomingWebhookOk() (*ServerMonitoringSettingsNotificationIncomingWebhook, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomingWebhook, true
}

// SetIncomingWebhook sets field value
func (o *ServerMonitoringSettingsNotification) SetIncomingWebhook(v ServerMonitoringSettingsNotificationIncomingWebhook) {
	o.IncomingWebhook = v
}

// GetIntervalHours returns the IntervalHours field value
func (o *ServerMonitoringSettingsNotification) GetIntervalHours() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IntervalHours
}

// GetIntervalHoursOk returns a tuple with the IntervalHours field value
// and a boolean to check if the value has been set.
func (o *ServerMonitoringSettingsNotification) GetIntervalHoursOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntervalHours, true
}

// SetIntervalHours sets field value
func (o *ServerMonitoringSettingsNotification) SetIntervalHours(v int32) {
	o.IntervalHours = v
}

func (o ServerMonitoringSettingsNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerMonitoringSettingsNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["incoming_webhook"] = o.IncomingWebhook
	toSerialize["interval_hours"] = o.IntervalHours
	return toSerialize, nil
}

func (o *ServerMonitoringSettingsNotification) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"incoming_webhook",
		"interval_hours",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerMonitoringSettingsNotification := _ServerMonitoringSettingsNotification{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerMonitoringSettingsNotification)

	if err != nil {
		return err
	}

	*o = ServerMonitoringSettingsNotification(varServerMonitoringSettingsNotification)

	return err
}

type NullableServerMonitoringSettingsNotification struct {
	value *ServerMonitoringSettingsNotification
	isSet bool
}

func (v NullableServerMonitoringSettingsNotification) Get() *ServerMonitoringSettingsNotification {
	return v.value
}

func (v *NullableServerMonitoringSettingsNotification) Set(val *ServerMonitoringSettingsNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableServerMonitoringSettingsNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableServerMonitoringSettingsNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerMonitoringSettingsNotification(val *ServerMonitoringSettingsNotification) *NullableServerMonitoringSettingsNotification {
	return &NullableServerMonitoringSettingsNotification{value: val, isSet: true}
}

func (v NullableServerMonitoringSettingsNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerMonitoringSettingsNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


